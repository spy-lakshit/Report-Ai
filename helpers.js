// Helper functions for document creation
const { Paragraph, TextRun, AlignmentType, PageBreak, Footer, PageNumber, NumberFormat, TabStopType, LeaderType } = require('docx');

// Function to create formatted paragraphs
function createFormattedParagraphs(text) {
    const paragraphs = [];
    const lines = text.split('\n').filter(line => line.trim());

    for (const line of lines) {
        const trimmedLine = line.trim();

        if (!trimmedLine) continue;

        // Skip any chapter headings that might be generated by AI
        if (trimmedLine.match(/^#+\s*Chapter \d+:/i) || trimmedLine.match(/^Chapter \d+:/i)) {
            continue;
        }

        // Main heading (e.g., 1.1 Background) or Front Matter heading
        if (trimmedLine.match(/^\d+\.\d+/) || ['TRAINING CERTIFICATE', 'ACKNOWLEDGEMENT', 'ABSTRACT', 'REFERENCES', 'LIST OF CONTENTS'].includes(trimmedLine)) {
            const isFrontMatterHeading = ['TRAINING CERTIFICATE', 'ACKNOWLEDGEMENT', 'ABSTRACT', 'REFERENCES', 'LIST OF CONTENTS'].includes(trimmedLine);

            paragraphs.push(
                new Paragraph({
                    children: [
                        new TextRun({
                            text: trimmedLine,
                            bold: true,
                            size: 28,
                            font: "Times New Roman"
                        })
                    ],
                    alignment: isFrontMatterHeading ? AlignmentType.CENTER : AlignmentType.LEFT,
                    spacing: {
                        before: isFrontMatterHeading ? 480 : 360,
                        after: 240,
                        line: 360,
                        lineRule: "auto"
                    },
                    indent: { left: 0, right: 0 }
                })
            );
        }
        // Regular paragraph
        else {
            const isReference = trimmedLine.match(/^\d+\.\s*https?:\/\//);
            
            paragraphs.push(
                new Paragraph({
                    children: [
                        new TextRun({
                            text: trimmedLine,
                            bold: false,
                            size: 24,
                            font: "Times New Roman"
                        })
                    ],
                    alignment: isReference ? AlignmentType.LEFT : AlignmentType.JUSTIFIED,
                    spacing: {
                        before: 0,
                        after: 120,
                        line: 360,
                        lineRule: "auto"
                    },
                    indent: isReference ? { left: 360 } : { left: 0, right: 0 }
                })
            );
        }
    }

    return paragraphs;
}

// Helper functions for document creation
function createCoverPage(config) {
    return [
        new Paragraph({
            children: [
                new TextRun({
                    text: config.institution.toUpperCase(),
                    bold: true,
                    size: 32,
                    font: "Times New Roman"
                })
            ],
            alignment: AlignmentType.CENTER,
            spacing: { before: 720, after: 240 }
        }),
        new Paragraph({
            children: [
                new TextRun({
                    text: config.department || `Department of ${config.course}`,
                    bold: true,
                    size: 28,
                    font: "Times New Roman"
                })
            ],
            alignment: AlignmentType.CENTER,
            spacing: { after: 720 }
        }),
        new Paragraph({
            children: [
                new TextRun({
                    text: config.projectTitle.toUpperCase(),
                    bold: true,
                    size: 36,
                    font: "Times New Roman"
                })
            ],
            alignment: AlignmentType.CENTER,
            spacing: { before: 1440, after: 1440 }
        }),
        new Paragraph({
            children: [
                new TextRun({
                    text: `A ${config.reportType.toUpperCase()} REPORT`,
                    bold: true,
                    size: 28,
                    font: "Times New Roman"
                })
            ],
            alignment: AlignmentType.CENTER,
            spacing: { after: 720 }
        }),
        new Paragraph({
            children: [
                new TextRun({
                    text: "Submitted by:",
                    bold: false,
                    size: 24,
                    font: "Times New Roman"
                })
            ],
            alignment: AlignmentType.CENTER,
            spacing: { after: 120 }
        }),
        new Paragraph({
            children: [
                new TextRun({
                    text: config.studentName,
                    bold: true,
                    size: 28,
                    font: "Times New Roman"
                })
            ],
            alignment: AlignmentType.CENTER,
            spacing: { after: 120 }
        }),
        new Paragraph({
            children: [
                new TextRun({
                    text: `Student ID: ${config.studentId}`,
                    bold: false,
                    size: 24,
                    font: "Times New Roman"
                })
            ],
            alignment: AlignmentType.CENTER,
            spacing: { after: 240 }
        }),
        new Paragraph({
            children: [
                new TextRun({
                    text: config.course,
                    bold: false,
                    size: 24,
                    font: "Times New Roman"
                })
            ],
            alignment: AlignmentType.CENTER,
            spacing: { after: 120 }
        }),
        new Paragraph({
            children: [
                new TextRun({
                    text: config.semester,
                    bold: false,
                    size: 24,
                    font: "Times New Roman"
                })
            ],
            alignment: AlignmentType.CENTER,
            spacing: { after: 720 }
        }),
        new Paragraph({
            children: [
                new TextRun({
                    text: "Under the guidance of:",
                    bold: false,
                    size: 24,
                    font: "Times New Roman"
                })
            ],
            alignment: AlignmentType.CENTER,
            spacing: { after: 120 }
        }),
        new Paragraph({
            children: [
                new TextRun({
                    text: config.supervisor,
                    bold: true,
                    size: 28,
                    font: "Times New Roman"
                })
            ],
            alignment: AlignmentType.CENTER,
            spacing: { after: 720 }
        }),
        new Paragraph({
            children: [
                new TextRun({
                    text: new Date().getFullYear().toString(),
                    bold: true,
                    size: 28,
                    font: "Times New Roman"
                })
            ],
            alignment: AlignmentType.CENTER,
            spacing: { before: 720 }
        })
    ];
}

module.exports = {
    createFormattedParagraphs,
    createCoverPage
};